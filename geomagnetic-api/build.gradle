plugins {
    id "org.liquibase.gradle" version "2.0.1"
}

version = "1.0.0"

ext {
    set("liquibaseCoreVersion", "3.6.3")
    set("modelMapperVersion", "2.3.4")
    set("p6spyVersion", "3.8.2")
    set("httpComponentsVersion", "4.5.9")
    set("lombokVersion", "1.18.8")
    set("postgresVersion", "42.2.5")
    set("liquibaseDslVersion", "2.0.1")
    set("logbackVersion", "1.2.3")
    set("junitVersion", "5.4.2")
    set("h2Version", "1.4.199")
}

dependencies {
    api "org.springframework.boot:spring-boot-starter-web"
    api "org.springframework.cloud:spring-cloud-starter-config"
    api "org.springframework.boot:spring-boot-starter-data-jpa"
    api "org.springframework.boot:spring-boot-starter-validation"

    api "org.liquibase:liquibase-core:${liquibaseCoreVersion}"
    api "org.modelmapper:modelmapper:${modelMapperVersion}"
    api "p6spy:p6spy:${p6spyVersion}"
    api "org.apache.httpcomponents:httpclient:${httpComponentsVersion}"

    runtimeOnly "org.postgresql:postgresql:${postgresVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "com.h2database:h2:${h2Version}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.springframework.boot:spring-boot-configuration-processor"

    liquibaseRuntime "org.liquibase:liquibase-core:${liquibaseCoreVersion}"
    liquibaseRuntime "org.liquibase:liquibase-groovy-dsl:${liquibaseDslVersion}"
    liquibaseRuntime "ch.qos.logback:logback-classic:${logbackVersion}"
    liquibaseRuntime "org.postgresql:postgresql:${postgresVersion}"
}

liquibase {
    activities {
        main {
            changeLogFile "${projectDir}/src/main/resources/liquibase/changelog.yaml"
            outputFile "${buildDir}/liquibase/sql-migration.sql"
            url "jdbc:postgresql://${System.getenv("LIQUIBASE_GEOMAGNETIC_DATABASE_URI")}:${System.getenv("LIQUIBASE_GEOMAGNETIC_DATABASE_PORT")}/geomagnetic"
            username System.getenv("LIQUIBASE_GEOMAGNETIC_DATABASE_USER")
            password System.getenv("LIQUIBASE_GEOMAGNETIC_DATABASE_PASSWORD")
            defaultSchemaName System.getenv("LIQUIBASE_GEOMAGNETIC_DATABASE_SCHEMA")
        }
    }
}