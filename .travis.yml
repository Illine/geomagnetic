dist: bionic
sudo: required
addons:
  apt:
    packages:
      - ansible

services:
  - docker

language: java

jdk: openjdk11

branches:
  only:
  - develop
  - release/.*

env:
  global:
    # Export a Docker User
    - secure: "ipRZ8IPq5I2ZC/HjXGQEA7qEQzQxRKNv0W+uazYVRKHJGxtVAJwbE7A9V0etGDzWa3tpu7u/QSsvAI3ffc9HgAjFV+piR5VXYekf9a4xTZN2Xcsee5BEfVvMxclasR9OvZuOuQgVvWbYNHZAyWSdq9qNRSIvc7LMbKsiE9MN92s3A3W+Ht+Ayv+923s2lzI6TpvnGWBYsjPUgeNAXJ7dh5dF71oRNDS/RW4821+78aAheDpze/LogvwjJl39Pp1q0Qzj6QM5e5VxReahEzzVKmL6L6Z3kWrYgkbsqJ3mYkZjaVMb2hslHM4GuvxUTlKbmtG0gJXHmCRSWebVpDqmLLIz3+UofZ/W359c+HcUatbEPo23Unropp2bTy6w6J1rxzoZxa5wprwsO1h5VRJC1DYD2wnb6SV4Z/EnKEVYJA/6TjzMjUdRi75gswflUJUMMLCfYH2RJQk+iJaeaFQ4vaUyyaG8A/c/EuYaO+aC4KbvXBwbUKx2P1dePnISjJ7thIbnJ7kVet33jxFBBY6EWQ8WZu+TFQcPtEG1NzcJhcDHFYX48bSXU3qCaQh1wd34W5dBOKEln8rPFOEi30a3DkRiPqIRmpsx2H47Sp90q9CNHwHdWhm3Lfv7ESn4z/rvkZNqbCYMZTmhb1htNuBud7hoFoMeMieHyoyGcF7OTOI="
    # Export a Docker password
    - secure: "oP2BaKJdR6J3KV2b7WUOj/AlioYyqrwfQlZIP5dptWQsaRxW7blgIZ4EJmLs1LGnxEf0nnbDJCbpnwRB+PnEBHBQymb175aLfmzQzpqusTgQiA6+YOmnwKRn6FdZsGh+0j2XcvHx3UBCJ5gtVOK0gR8169TyPeFJ9C+4TrfrswhD91X3i1FS10odSC71h8dFJVx1liMDhfu57II5sdlo1UcQnUhLBHoMUiZZ59HBTn/jPJYKfw4Cb5G+4o7tt5X9YmF9fyp5l7EMCc+5/BrDxbfRJD5l1eGSCLUK1LmtFrsNKDm/ULFPppdQwkI3appRZD/9jd4hkXr2Rkmd+4usmz6y+O+bsYUAFHTsFz2wNRfXE708aTARbeigheYpaiDEOXLnfWfi2evhZDzNJdUK27e0EaFW6wZCouQhKpmLiAluseXuYgVW25vSuD27c79O/ZwHGSwWHXKaerCt++A9zCj/hjC1Pqvuz9XbvprG7IMCtf8kp24a7MegP7UfmsHaKwmWmhTMhnEXzhMNIZptEwEOYy75c5cAVTDXz0VCBRJPYELd2e5yVpLFQAzYs7NdB8OxQYGYEVMCEB3l2I5jAP09fIdRrZPpcs1g+t2zeXwFw0QsT4PVn4ryySyd1Xb3YHXOPJjapwF/0zKG5A1inb/N2wRHN9ggRbgGsxVrpVU="

install: skip

before_script:
  # Export an active profile variable
  - export ACTIVE_PROFILE="$(if [ "$TRAVIS_BRANCH" == "develop" ]; then echo test; else echo production ; fi)"

  # Export project dir
  - export WEATHER_PROJECT_DIR=$TRAVIS_BUILD_DIR

  # Decrypt an ansible-vault password
  - openssl aes-256-cbc -K $encrypted_122e927bb500_key -iv $encrypted_122e927bb500_iv -in ansible/password/ansible-vault-$ACTIVE_PROFILE.password.enc -out ansible/password/ansible-vault-$ACTIVE_PROFILE.password -d

  # Make an ansible-playbook
  - export ANSIBLE_PASSWORD_FILE=ansible/password/ansible-vault-$ACTIVE_PROFILE.password
  - ansible-playbook -i ansible/inventories/${ACTIVE_PROFILE} ansible/playbook.yaml --vault-password-file=$ANSIBLE_PASSWORD_FILE

jobs:
  include:
  - stage: test
    name: Running an assemble and tests

  - stage: docker
    name: Running a build and a push to Docker
    script:
      # Assemble the project
      - ./gradlew assemble

      # Export a docker tag variables
      - export DOCKER_TAG="$(echo $TRAVIS_BRANCH | grep -E "(develop|release/.*)" | cut -d '/' -f2)"
      - export DOCKER_LASTEST_TAG="$(if [ "$TRAVIS_BRANCH" == "develop" ]; then echo $DOCKER_TAG; else echo latest ; fi)"

      # Login the Docker
      - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      # Build and push to the Docker
      - docker build -t $DOCKER_USER/config-service:$DOCKER_TAG ./config-service
      - docker tag $DOCKER_USER/config-service:$DOCKER_TAG $DOCKER_USER/config-service:$DOCKER_LASTEST_TAG
      - docker push $DOCKER_USER/config-service

      - docker build -t $DOCKER_USER/geomagnetic-api:$DOCKER_TAG ./geomagnetic-api
      - docker tag $DOCKER_USER/geomagnetic-api:$DOCKER_TAG $DOCKER_USER/geomagnetic-api:$DOCKER_LASTEST_TAG
      - docker push $DOCKER_USER/geomagnetic-api

  - stage: liquibase
    name: Running liquibase scripts
    script:
      - ./gradlew :geomagnetic-api:update

  - stage: deploy
    name: Pulling from Docker Hub and deploying via docker-compose
    script:
      - ./deploy/deploy.sh