name: "release"

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          architecture: x64
          java-version: 11

      - name: Gradle Test
        run: ./gradlew test

      - name: Codecov
        uses: codecov/codecov-action@v1.0.10
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./build/jacoco/coverage.xml
          name: codecov-geomagnetic-unit
          flags: unit
          fail_ci_if_error: true

      - name: Gradle Build
        run: ./gradlew assemble

      - name: Tag Bump and Push
        uses: anothrNick/github-tag-action@1.22.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          RELEASE_BRANCHES: master

      - name: Docker Build and Push
        uses: elgohr/Publish-Docker-Github-Action@2.18
        with:
          name: illine/geomagnetic
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,${{ steps.build.outputs.new_tag }}"

  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Database URL
        run: echo ::set-env name=DATABASE_URL::$(echo ${{ secrets.PROD_DATABASE_URL }})

      - name: Setup Image Tag
        run: echo ::set-env name=IMAGE_TAG::$(echo ${{ steps.build.outputs.tag }})

      - name: Setup Kubernetes Config Directory
        run: echo ::set-env name=K8S_DIR::$(echo ".ansible/configs/k8s")

      - name: Generate Configs by Ansible Playbook
        uses: saubermacherag/ansible-playbook-docker-action@v1.3
        with:
          playbookName: .ansible/main.yaml
          keyFileVaultPass: ${{ secrets.PROD_ANSIBLE_VAULT_PASSWORD }}
          inventoryFile: .ansible/inventories/prod/hosts.yml
          extraVars: -e env=prod

      - name: Copy liquibase.properties to a .liquibase folder
        run: cp .ansible/configs/liquibase/liquibase.properties .liquibase/liquibase.properties

      - name: Update Database by Liquibase
        run: ./gradlew update

      - name: Upload Kubernetes ConfigMap
        uses: ameydev/gke-kubectl-action@v1.02
        env:
          PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
          APPLICATION_CREDENTIALS: ${{ secrets.GKE_AUTH }}
          CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
          ZONE_NAME: ${{ secrets.GKE_ZONE_NAME }}
        with:
          args: apply -f $K8S_DIR/config-map.yaml

      - name: Upload Kubernetes Secret
        uses: ameydev/gke-kubectl-action@v1.02
        env:
          PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
          APPLICATION_CREDENTIALS: ${{ secrets.GKE_AUTH }}
          CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
          ZONE_NAME: ${{ secrets.GKE_ZONE_NAME }}
        with:
          args: apply -f $K8S_DIR/secret.yaml

      - name: Upload Kubernetes Service
        uses: ameydev/gke-kubectl-action@v1.02
        env:
          PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
          APPLICATION_CREDENTIALS: ${{ secrets.GKE_AUTH }}
          CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
          ZONE_NAME: ${{ secrets.GKE_ZONE_NAME }}
        with:
          args: apply -f $K8S_DIR/service.yaml

      - name: Upload Kubernetes Deployment
        uses: ameydev/gke-kubectl-action@v1.02
        env:
          PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
          APPLICATION_CREDENTIALS: ${{ secrets.GKE_AUTH }}
          CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
          ZONE_NAME: ${{ secrets.GKE_ZONE_NAME }}
        with:
          args: apply -f $K8S_DIR/deployment.yaml --record